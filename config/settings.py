"""
Django settings for arQRCode project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from os.path import dirname, join

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'pwh@m%9r*y!!h2vqd=xw&zvg-&$4h7z3ap!odkq3sk-=q)4+d!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
#    'registration.apps.RegistrationConfig', #Add this
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # The following apps are required:
    'django.contrib.sites',
    'crispy_forms',

    # 'bootstrap3', # optional module for making bootstrap forms easier
    'bootstrap4', # Ac√°

    'bootstrapform',
    'allauth_bootstrap',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'arQRCode.auth',  #Added for hello app
    'qr_code',
    'django_icons',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'arQRCode.urls'

WSGI_APPLICATION = 'arQRCode.wsgi.application'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # allauth templates: you could copy this directory into your
            # project and tweak it according to your needs
            # join(PROJECT_ROOT, 'templates', 'uniform', 'allauth'),
            # example project specific templates
            join(BASE_DIR, 'arQRCode', 'templates', 'plain', 'example'),
            #join(BASE_DIR, 'allauthdemo', 'templates', 'bootstrap', 'allauth'),
            join(BASE_DIR, 'arQRCode', 'templates', 'allauth'),
            join(BASE_DIR, 'arQRCode', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # needed for admin templates
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # `allauth` needs this from django. It is there by default,
                # unless you've devilishly taken it away.
                'django.template.context_processors.request',
            ],
        },
    },
]

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'arQRCode',
        'USER': 'postgres',
        'PASSWORD': '7b0t27K2E',
        'HOST': 'localhost',
        'PORT': '',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(BASE_DIR, 'static'),
    )

PROFILEMEDIA_ROOT = os.path.join(BASE_DIR, "static/profiles")

#Custom User
#AUTH_USER_MODEL = 'auth.User'
AUTH_USER_MODEL = 'arqrcode_auth.User'
#AUTH_USER_MODEL = 'allauthdemo_auth.User'
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    'arQRCode.auth.customAuthentification.customAuthentification',
)

# EMAIL_BACKEND so allauth can proceed to send confirmation emails
# ONLY for development/testing use console
EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'
# # Email configurations
# EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST='isp.domca.com' # Set your email host
# EMAIL_PORT=589
# EMAIL_HOST_USER='jmserrano-domca-com'
# EMAIL_HOST_PASSWORD='WXAH5s06'
# EMAIL_USE_TLS=False
# DEFAULT_FROM_EMAIL = 'jmserrano@domca.com'

# Don't forget this little dude.
SITE_ID = 1

# Custom allauth settings
# Make email verification mandatory to avoid junk email accounts
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
# Eliminate need to provide username, as it's a very old practice
ACCOUNT_USERNAME_REQUIRED = False
# require social accounts to use the signup form ... I think
SOCIALACCOUNT_AUTO_SIGNUP = False

# HTTPS
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'

# Custom User Models
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_LOGOUT_ON_GET = True

#ACCOUNT_SIGNUP_FORM_CLASS = ''
LOGIN_REDIRECT_URL = '/member/'
ACCOUNT_USERNAME_MIN_LENGTH = 3
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = True

DJANGO_ICONS = {
    "ICONS": {
        "star": {"name": "far fa-star"},
    },
}

# Custom forms
ACCOUNT_FORMS = {'signup': 'arQRCode.auth.forms.forms.qrCodeSignupForm'}
#ACCOUNT_SIGNUP_FORM_CLASS = 'arQRCode.auth.customForms.qrCodeSignupForm'

# Regional settings
TIME_ZONE = 'Europe/Madrid'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#language-code
LANGUAGE_CODE = 'es'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-i18n
USE_I18N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-l10n
USE_L10N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-tz
USE_TZ = True

# Third party apps configuration

CRISPY_TEMPLATE_PACK = 'bootstrap4'